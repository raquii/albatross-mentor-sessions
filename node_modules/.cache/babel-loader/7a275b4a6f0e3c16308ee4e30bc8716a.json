{"ast":null,"code":"import _slicedToArray from \"/Users/rromanrodriguez/Documents/CTD/mentor-session/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/rromanrodriguez/Documents/CTD/mentor-session/src/Clock.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\n/* \nuseEffect\n- what are side effects?\n\tWhen a function, expression, or operation does \n\tsomething with an observable effect that it \n\tdoesn't communicate, meaning it doesnt return a value\n\n- when do we use useEffect?\n\tfetching data from an API, \n\tsetTimeout/setInterval, \n\tasyncronous work, \n\treading from local storage,\n\tetc.\n\n\t- what is an api?\n\t\tapplication programming interface\n\n- when does useEffect run?\n\t“The question is not 'when does this effect run?' \n\tBut 'with which state does this effect synchronize with'”\n\n\t- what is a dependency array?\n\t\tuseEffect(ƒn); = syncs with ALL States\n\t\tuseEffect(ƒn, []); = sync with NO States\n\t\tuseEffect(ƒn, [these, states]); = sync with 'these' & 'states'\n*/\n\n/**\n * Custom Hook - Returns a string with the current locale time every second\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useSetClock() {\n  _s();\n\n  var _useState = useState(new Date().toLocaleTimeString()),\n      _useState2 = _slicedToArray(_useState, 2),\n      time = _useState2[0],\n      setTime = _useState2[1];\n\n  useEffect(function () {\n    var intervalId = setInterval(function () {\n      console.log(\"running\");\n      var newTime = new Date().toLocaleTimeString();\n      setTime(newTime);\n    }, 1000);\n    return function () {\n      console.log(\"cleanup\");\n      clearInterval(intervalId);\n    };\n  }, []);\n  return time;\n}\n/**\n * Returns an `<h3>` element with the current time\n */\n\n\n_s(useSetClock, \"jv+edrtG9vNyfyGh4+I7dCkFwt0=\");\n\nfunction ClockTime() {\n  _s2();\n\n  var time = useSetClock();\n  return /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: time.toString()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n/**\n * Returns Clock component with a toggle button\n */\n\n\n_s2(ClockTime, \"QiFp2tQas2/+UqrpqN4FM8lWn3w=\", false, function () {\n  return [useSetClock];\n});\n\n_c = ClockTime;\nexport default function Clock() {\n  _s3();\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showClock = _useState4[0],\n      setShowClock = _useState4[1];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"clock-container\",\n    children: [showClock && /*#__PURE__*/_jsxDEV(ClockTime, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn\",\n      onClick: function onClick() {\n        return setShowClock(!showClock);\n      },\n      children: showClock ? \"Hide Clock\" : \"Show Clock\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 3\n  }, this);\n}\n\n_s3(Clock, \"hVJw+JWTgLhZvSPhT5WIxF+cfzU=\");\n\n_c2 = Clock;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ClockTime\");\n$RefreshReg$(_c2, \"Clock\");","map":{"version":3,"names":["useEffect","useState","useSetClock","Date","toLocaleTimeString","time","setTime","intervalId","setInterval","console","log","newTime","clearInterval","ClockTime","toString","Clock","showClock","setShowClock"],"sources":["/Users/rromanrodriguez/Documents/CTD/mentor-session/src/Clock.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\n/* \nuseEffect\n- what are side effects?\n\tWhen a function, expression, or operation does \n\tsomething with an observable effect that it \n\tdoesn't communicate, meaning it doesnt return a value\n\n- when do we use useEffect?\n\tfetching data from an API, \n\tsetTimeout/setInterval, \n\tasyncronous work, \n\treading from local storage,\n\tetc.\n\n\t- what is an api?\n\t\tapplication programming interface\n\n- when does useEffect run?\n\t“The question is not 'when does this effect run?' \n\tBut 'with which state does this effect synchronize with'”\n\n\t- what is a dependency array?\n\t\tuseEffect(ƒn); = syncs with ALL States\n\t\tuseEffect(ƒn, []); = sync with NO States\n\t\tuseEffect(ƒn, [these, states]); = sync with 'these' & 'states'\n*/\n\n/**\n * Custom Hook - Returns a string with the current locale time every second\n */\nfunction useSetClock() {\n\tconst [time, setTime] = useState(new Date().toLocaleTimeString());\n\n\tuseEffect(() => {\n\t\tconst intervalId = setInterval(() => {\n\t\t\tconsole.log(\"running\");\n\t\t\tconst newTime = new Date().toLocaleTimeString();\n\t\t\tsetTime(newTime);\n\t\t}, 1000);\n\n\t\treturn function () {\n\t\t\tconsole.log(\"cleanup\");\n\t\t\tclearInterval(intervalId);\n\t\t};\n\t}, []);\n\n\treturn time;\n}\n\n/**\n * Returns an `<h3>` element with the current time\n */\nfunction ClockTime() {\n\tconst time = useSetClock();\n\treturn <h3>{time.toString()}</h3>;\n}\n\n/**\n * Returns Clock component with a toggle button\n */\nexport default function Clock() {\n\tconst [showClock, setShowClock] = useState(true);\n\n\treturn (\n\t\t<div id=\"clock-container\">\n\t\t\t{showClock && <ClockTime />}\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclassName=\"btn\"\n\t\t\t\tonClick={() => setShowClock(!showClock)}>\n\t\t\t\t{showClock ? \"Hide Clock\" : \"Show Clock\"}\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n"],"mappings":";;;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;AACA,SAASC,WAAT,GAAuB;EAAA;;EACtB,gBAAwBD,QAAQ,CAAC,IAAIE,IAAJ,GAAWC,kBAAX,EAAD,CAAhC;EAAA;EAAA,IAAOC,IAAP;EAAA,IAAaC,OAAb;;EAEAN,SAAS,CAAC,YAAM;IACf,IAAMO,UAAU,GAAGC,WAAW,CAAC,YAAM;MACpCC,OAAO,CAACC,GAAR,CAAY,SAAZ;MACA,IAAMC,OAAO,GAAG,IAAIR,IAAJ,GAAWC,kBAAX,EAAhB;MACAE,OAAO,CAACK,OAAD,CAAP;IACA,CAJ6B,EAI3B,IAJ2B,CAA9B;IAMA,OAAO,YAAY;MAClBF,OAAO,CAACC,GAAR,CAAY,SAAZ;MACAE,aAAa,CAACL,UAAD,CAAb;IACA,CAHD;EAIA,CAXQ,EAWN,EAXM,CAAT;EAaA,OAAOF,IAAP;AACA;AAED;AACA;AACA;;;GArBSH,W;;AAsBT,SAASW,SAAT,GAAqB;EAAA;;EACpB,IAAMR,IAAI,GAAGH,WAAW,EAAxB;EACA,oBAAO;IAAA,UAAKG,IAAI,CAACS,QAAL;EAAL;IAAA;IAAA;IAAA;EAAA,QAAP;AACA;AAED;AACA;AACA;;;IAPSD,S;UACKX,W;;;KADLW,S;AAQT,eAAe,SAASE,KAAT,GAAiB;EAAA;;EAC/B,iBAAkCd,QAAQ,CAAC,IAAD,CAA1C;EAAA;EAAA,IAAOe,SAAP;EAAA,IAAkBC,YAAlB;;EAEA,oBACC;IAAK,EAAE,EAAC,iBAAR;IAAA,WACED,SAAS,iBAAI,QAAC,SAAD;MAAA;MAAA;MAAA;IAAA,QADf,eAEC;MACC,IAAI,EAAC,QADN;MAEC,SAAS,EAAC,KAFX;MAGC,OAAO,EAAE;QAAA,OAAMC,YAAY,CAAC,CAACD,SAAF,CAAlB;MAAA,CAHV;MAAA,UAIEA,SAAS,GAAG,YAAH,GAAkB;IAJ7B;MAAA;MAAA;MAAA;IAAA,QAFD;EAAA;IAAA;IAAA;IAAA;EAAA,QADD;AAWA;;IAduBD,K;;MAAAA,K"},"metadata":{},"sourceType":"module"}